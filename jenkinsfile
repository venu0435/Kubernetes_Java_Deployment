pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'venubollu0435'  // Set in Jenkins Credentials
        DOCKER_IMAGE = "your-dockerhub-username/microservice"
        SSH_CREDENTIALS = 'azure-ssh-credentials'  // Set in Jenkins Credentials
        SERVER_IP = "your-azure-vm-public-ip"  // Update with Azure VM public IP
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/your-repo.git'  // Update with your repo URL
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'  // Modify based on your microservice stack
            }
        }

        stage('Run Tests') {
            steps {
                sh 'npm test'  // Modify as needed
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: DOCKER_HUB_CREDENTIALS, url: 'https://index.docker.io/v1/']) {
                    sh "docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Deploy on Azure VM') {
            steps {
                sshagent(['azure-ssh-credentials']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no azureuser@${SERVER_IP} << EOF
                    docker pull ${DOCKER_IMAGE}:${BUILD_NUMBER}
                    docker stop microservice || true
                    docker rm microservice || true
                    docker run -d --name microservice -p 3000:3000 ${DOCKER_IMAGE}:${BUILD_NUMBER}
                    EOF
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Deployment Successful!"
        }
        failure {
            echo "Deployment Failed!"
        }
    }
}
